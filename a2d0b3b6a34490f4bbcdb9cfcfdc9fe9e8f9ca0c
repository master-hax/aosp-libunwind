{
  "comments": [
    {
      "key": {
        "uuid": "77a61bd5_bfb457d2",
        "filename": "src/mips/Gis_signal_frame.c",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-01-30T02:58:53Z",
      "side": 1,
      "message": "As I mentioned in the other file, it would be better to return 0 here.",
      "range": {
        "startLine": 53,
        "startChar": 4,
        "endLine": 53,
        "endChar": 15
      },
      "revId": "a2d0b3b6a34490f4bbcdb9cfcfdc9fe9e8f9ca0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97a1cfbc_63ff5cbd",
        "filename": "src/mips/Gstep.c",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-01-30T02:58:53Z",
      "side": 1,
      "message": "Unfortunately, if you do this you might find cases that can never unwind. It\u0027s better to modify unw_is_signal_frame to only return 0, 1, 2. Then on any error, you can still run through this function since if things are garbled you might still be able to unwind something.\n\nFor example, you can fail to read the PC if we jumped into the middle of nowhere and the PC is zero or some other garbage. You\u0027d still like to see if you can unwind, although I don\u0027t think this code can do anything in that case. The arm/arm64 code has a special case if we can\u0027t unwind anything use the return address as the new ip and try to keep going from there. That allows an unwind when you try to execute garbage.",
      "range": {
        "startLine": 126,
        "startChar": 1,
        "endLine": 127,
        "endChar": 15
      },
      "revId": "a2d0b3b6a34490f4bbcdb9cfcfdc9fe9e8f9ca0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b79c1385_c4b4f0d3",
        "filename": "src/mips/Gstep.c",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-01-30T02:58:53Z",
      "side": 1,
      "message": "It\u0027s probably better to follow the arm model, where if we failed to handle the signal frame we try a dwarf unwind anyway. It\u0027s possible that we were tricked into thinking it was a signal frame, but unwinding that way failed, so we try something different.",
      "range": {
        "startLine": 130,
        "startChar": 4,
        "endLine": 131,
        "endChar": 17
      },
      "revId": "a2d0b3b6a34490f4bbcdb9cfcfdc9fe9e8f9ca0c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}